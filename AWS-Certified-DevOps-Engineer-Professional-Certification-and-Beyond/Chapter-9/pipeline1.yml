AWSTemplateFormatVersion: 2010-09-09
Description: > 
  Example Pipeline to Create resouces  
  for Chapter 9 of Packt Publishings 
  DevOps Engineer Professional and Beyond 

Parameters:
  LayerName:
    Type: String
    Description: Name of the Project
    Default: "chapt9"
  PipelineName:
    Type: String 
    Description: A name for pipeline
    Default: "c9-demo"
  BranchName:
    Type: String 
    Description: CodeCommit branch name 
    Default: main
  Email:
    Type: String
    Description: The email address where CodePipeline sends pipeline notifications
    Default: test@test.com
  CodeCommitRepoName:
    Type: String 
    Description: The name of the Code Commit Repository 
    Default: "chapt9"
  ECSStackName:
    Type: String 
    Description: The name of the CloudFormation Stack for the ECS CFT
    Default: "ECS-Stack"
  RepositoryURL:
    Type: String
    Description: The Clone URL for the Code Commit Repository
    Default: "https://git-codecommit.us-east-2.amazonaws.com/v1/repos/chapter9"

Resources:

##-- IAM Roles 
  CodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: AWS-CodePipeline-Service-3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'codecommit:CancelUploadArchive'
                  - 'codecommit:GetBranch'
                  - 'codecommit:GetCommit'
                  - 'codecommit:GetUploadArchiveStatus'
                  - 'codecommit:UploadArchive'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:GetApplicationRevision'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:RegisterApplicationRevision'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'lambda:InvokeFunction'
                  - 'lambda:ListFunctions'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource: '*'
              - Effect: Allow
                Action:
                 # - 'elasticbeanstalk:*'
                 # - 'ec2:*'
                 # - 'elasticloadbalancing:*'
                 # - 'autoscaling:*'
                  - 'cloudwatch:*'
                  - 's3:*'
                  - 'sns:*'
                  - 'cloudformation:*'
                  - 'rds:*'
                  - 'sqs:*'
                  - 'ecs:*'
                Resource: '*'

  CodebuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
      Path: /
      Policies:
        - PolicyName: DefaultCodeBuildPolicy0
          PolicyDocument:
            Version: 2012-10-17
            Statement:
             - Resource: "*"
               Effect: Allow
               Action:
                 - codebuild:StartBuild
                 - codecommit:GitPull
                 - ecr:GetAuthorizationToken
                 - ecr:InitiateLayerUpload
                 - ecr:UploadLayerPart
                 - ecr:CompleteLayerUpload 
                 - ecr:BatchCheckLayerAvailability
                 - ecr:PutImage
                 - codeguru-reviewer:ListCodeReviews
                 - codeguru-reviewer:DescribeCodeReview
             - Resource: "*"
               Effect: Allow
               Action:
                - lambda:DeleteLayerVersion
                - lambda:GetLayerVersion
                - lambda:ListLayers
                - lambda:PublishLayerVersion
                - lambda:RemoveLayerVersionPermission
             - Resource: "*"
               Effect: Allow
               Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
             - Resource: "*" 
               Effect: Allow 
               Action:
                - 'iam:PassRole'
                - 'sns:Publish' 
                - 's3:*'

  CFNRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
        Version: 2012-10-17
      Path: /
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'ec2:*'
                  - iam:CreateRole
                  - iam:CreateInstanceProfile
                  - iam:DeleteInstanceProfile
                  - iam:AddRoleToInstanceProfile
                  - iam:GetRole
                  - iam:PassRole
                  - iam:RemoveRoleFromInstanceProfile 
                  - cloudwatch:PutMetricAlarm
                  - cloudwatch:DeleteAlarms
                  - logs:CreateLogGroup
                  - logs:PutRetentionPolicy
                  - logs:DeleteLogGroup
                  - ecs:DescribeClusters
                  - ecs:CreateCluster
                  - ecs:CreateService
                  - ecs:CreateTaskSet
                  - ecs:DeleteCluster
                  - ecs:DescribeServices
                  - ecs:DeleteService
                  - ecs:DeleteTaskSet
                  - ecs:RegisterTaskDefinition
                  - ecs:DeregisterTaskDefinition
                  - iam:DeleteRolePolicy
                  - iam:DeleteRole
                  - iam:PutRolePolicy
                  - elasticloadbalancing:Describe*
                  - elasticloadbalancing:CreateTargetGroup
                  - elasticloadbalancing:CreateLoadBalancer
                  - elasticloadbalancing:CreateListener
                  - elasticloadbalancing:DeleteListener 
                  - elasticloadbalancing:DeleteLoadBalancer
                  - elasticloadbalancing:DeleteTargetGroup 
                  - elasticloadbalancing:ModifyListener
                  - elasticloadbalancing:ModifyLoadBalancerAttributes
                  - application-autoscaling:DeleteScalingPolicy
                  - application-autoscaling:Describe*
                  - application-autoscaling:PutScalingPolicy
                  - application-autoscaling:DeregisterScalableTarget
                  - application-autoscaling:RegisterScalableTarget
                  - autoscaling:* 
                Effect: Allow
                Resource: '*'

##-- Code Build 
  CodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref PipelineName
      Description: !Sub Build project for ${PipelineName}
      ServiceRole: !Ref CodebuildRole
      Artifacts:
      #  Type: CODEPIPELINE
        Location: !Ref 'CodePipelineArtifactStoreBucket'
        Name: 'build-output.zip'
        NamespaceType: BUILD_ID
        Packaging: ZIP
        Path: 'codebuild'
        Type: S3
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:1.0
        Type: LINUX_CONTAINER
        PrivilegedMode: true
        EnvironmentVariables:
        - Name: GIT_REPO
          Type: PLAINTEXT
          Value: !Ref 'CodeCommitRepoName'
        # - Name: ECR_URI
        #   Type: PLAINTEXT
        #   Value: !Ref ElasticContainerRepo
      Source:
        Type: CODECOMMIT
        Location: !Join
          - ''
          - - 'https://git-codecommit.'
            - !Ref 'AWS::Region'
            - '.amazonaws.com/v1/repos/'
            - !Ref 'CodeCommitRepoName'
        BuildSpec: 'buildspecs/buildspec.yml'
      TimeoutInMinutes: 10 

  ReviewCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join 
        - '-'
        - - !Ref PipelineName
          - 'CodGuruReview'
      Description: !Sub CG Review Build project for ${PipelineName}
      ServiceRole: !Ref CodebuildRole
      Artifacts:    
        Location: !Ref 'CodePipelineArtifactStoreBucket'
        Name: 'review-build-output.zip'
        NamespaceType: BUILD_ID
        Packaging: ZIP
        Path: 'codebuild'
        Type: S3
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:1.0
        Type: LINUX_CONTAINER
        PrivilegedMode: true
        EnvironmentVariables:
        - Name: SNS_ARN
          Type: PLAINTEXT
          Value: !Ref CodePipelineSNSTopic
        - Name: GIT_REPO
          Type: PLAINTEXT
          Value: !Ref 'CodeCommitRepoName'
      Source:
        Type: CODECOMMIT
        Location: !Join
          - ''
          - - 'https://git-codecommit.'
            - !Ref 'AWS::Region'
            - '.amazonaws.com/v1/repos/'
            - !Ref 'CodeCommitRepoName'
        BuildSpec: 'buildspecs/buildspec-check.yml'
      TimeoutInMinutes: 10 

##-- Code Pipeline 
  CodePipelineArtifactStoreBucket:
    Type: 'AWS::S3::Bucket'
  
  CodePipelineSNSTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      Subscription:
        - Endpoint: !Ref Email
          Protocol: email
      TopicName: !Ref PipelineName
  Pipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties: 
      ArtifactStore:
        Location: !Ref CodePipelineArtifactStoreBucket
        Type: S3
      DisableInboundStageTransitions: []
      Name: !Ref PipelineName
      RoleArn: !GetAtt
        - CodePipelineServiceRole
        - Arn
      Stages:
        - Name: Source 
          Actions: 
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit 
                Version: '1'
              OutputArtifacts:
                - Name: SourceOutput
              Namespace: SourceVariables
              Configuration: 
                BranchName: !Ref BranchName
                RepositoryName: !Ref CodeCommitRepoName
                PollForSourceChanges: false
              RunOrder: 1            
        - Name: Build
          Actions: 
            - Name: CodeBuild
              InputArtifacts:
                 - Name: SourceOutput
              ActionTypeId:
                 Category: Build
                 Owner: AWS
                 Version: 1
                 Provider: CodeBuild 
              OutputArtifacts:
                 - Name: Built 
              Configuration: 
                 ProjectName: !Ref CodeBuild
              RunOrder: 1
        - Name: Deploy
          Actions: 
            - Name: ApproveDeploy
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              Configuration:
                NotificationArn: !Ref CodePipelineSNSTopic
                CustomData: !Sub >-
                  Do you want to deploy the code?
              RunOrder: 2
            - Name: CFTcreation
              InputArtifacts:
                - Name: SourceOutput
              ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: 1
                  Provider: CloudFormation
              RunOrder: 2
              Configuration: 
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt 
                  - CFNRole
                  - Arn
                Capabilities: CAPABILITY_NAMED_IAM
                StackName: !Ref ECSStackName
                TemplatePath: "SourceOutput::ecs_stack2.yml"
                OutputFileName: CreateStackOutput.json
              OutputArtifacts: 
                - Name: ProvisionOutput
           
          
#Outputs: